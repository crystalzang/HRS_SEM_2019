dyad2 <- left_join(h16_R_all_adl, helper_only2_id, by ="spouse_id")%>%
filter(Helper_Relationship==2)%>%
mutate(respondent=NA,
helper.x ="Y",
helper.y = "N",
resondent_and_helper= "N",
identity = "Only helper")
dyad_complete <- rbind(dyad_couple, dyad2)
dyad_complete <- rbind(dyad_couple, dyad2)
h16_R_all_adl_id<-h16_R_all_adl%>%
select(respondent_id, Sex.R)
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
respondent_id <- setdiff(helper$respondent_id, helper_also_respondent$respondent_id)
helper_only_id <-as.data.frame(respondent_id)%>%
mutate(identity="Helper_only")
helper_only2 <- left_join(helper, helper_only_id, by="respondent_id")%>%
filter(identity=="Helper_only")
View(helper_only2)
##Join again
helper_only2_id<-helper_only2%>%
select(spouse_id, Helper_Relationship, Freqency_help, Helper_sex)
dyad2 <- left_join(h16_R_all_adl, helper_only2_id, by ="spouse_id")%>%
filter(Helper_Relationship==2)%>%
mutate(respondent=NA,
helper.x ="Y",
helper.y = "N",
resondent_and_helper= "N",
identity = "Only helper")
View(dyad2)
#We are using both helper.x and helper.y to identify couples
#helper.x means help giver. help.y means help recipient.
dyad_couple <- dyad_couple%>%
filter(helper.x=="Y" | helper.y =="Y")%>%
select(-respondent_id.y)
dyad_complete <- rbind(dyad_couple, dyad2)
View(dyad_complete)
#single people
test<-dyad_complete%>%
group_by(HHID)%>%
summarize(N=n())
View(test)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
#setwd("/Users/crystalzang/Desktop/data")
#individual
h16_R_all <- read_csv("~/Desktop/data/h16_R_all.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
library(ggplot2)
library(mosaic)
library(skimr)
rand <- read_csv("~/Desktop/data/randhrs.csv")
#glimpse(rand)
id <- rand %>%
select(HHIDPN, HHID, PN, RAHHIDPN,
R12CESD, S12CESD, #CESD Score, binary level yes or no
R12ADLA, S12ADLA #ADL Summary: sum ADLs where Respondent reports any difficulty
)
skim(id)
#rename
setnames(id ,
old=c("R12ADLA", "S12ADLA", "R12CESD", "S12CESD"),
new = c("R_ADL", "S_ADL", "R_CESD", "S_CESD"))
#rename
setnames(id ,
old=c("R12ADLA", "S12ADLA", "R12CESD", "S12CESD"),
new = c("R_ADL", "S_ADL", "R_CESD", "S_CESD"))
View(id)
id_valid <- id%>%
filter(!is.na(R_ADL) | !is.na(S_ADL))
View(id_valid)
tally(id_vali$R_ADL)
tally(id_valid$R_ADL)
id_valid <- id%>%
filter(!is.na(R_ADL) | !is.na(S_ADL), !is.na(R_CESD) | !is.na(S_CESD))
tally(id_valid$R_ADL)
tally(id_valid$S_ADL)
View(id_valid)
#Missing S_CESD meaning that those helper don't have ADL
tally(id_valid$S_CESD)
#filter out non-dyad individuals
id_valid <- id%>%
filter(!is.na(R_ADL) | !is.na(S_ADL), !is.na(R_CESD), !is.na(S_CESD))
#Missing S_CESD meaning that those helper don't have ADL
tally(id_valid$S_CESD)
id_group<-id_valid%>%
group_by(HHID)%>%
summarize(N=n())
View(id_group)
tally(id_group$N)
id_valid_dyad <- id_group%>%
filter(N==2)%>%
select(HHID)
id_valid_dyad_id <- id_group%>%
filter(N==2)%>%
select(HHID)
View(id_valid_dyad_id)
id_valid_dyad <- left_join(id_valid, id_valid_dyad_id, by="HHID")
View(id_valid_dyad)
View(id_valid_dyad)
id_valid_dyad <- left_join(id_valid, id_valid_dyad_id, by="HHID")
View(id_valid_dyad)
View(id_valid)
#Valid dyad HHID
id_valid_dyad_id <- id_group%>%
filter(N==2)%>%
select(HHID)%>%
mutate(dyad == "Y")
#Valid dyad HHID
id_valid_dyad_id <- id_group%>%
filter(N==2)%>%
select(HHID)%>%
mutate(dyad = "Y")
id_valid_dyad <- left_join(id_valid, id_valid_dyad_id, by="HHID")
id_valid_dyad <- left_join(id_valid, id_valid_dyad_id, by="HHID")%>%
filter(dyad == "Y")
ggplot( data = id_valid_dyad, aes(x = R_ADL)) + geom_histogram(binwidth = 1) + labs(title = "ADL respondent")
ggplot( data = id_valid_dyad, aes(x = S_ADL)) + geom_histogram(binwidth = 1) + labs(title = "ADL spouse")
ggplot( data = id_valid_dyad, aes(x = R_CESD)) + geom_histogram(binwidth = 1) + labs(title = "CESD respondent")
ggplot( data = id_valid_dyad, aes(x = S_CESD)) + geom_histogram(binwidth = 1) + labs(title = "CESD spouse")
write.csv(id_valid_dyad, file="S:/Desktop/HRS_SEM_2019/rand_dyad.csv")
write.csv(id_valid_dyad, file="S:/Desktop/HRS_SEM_2019/rand_dyad.csv", row.names = F)
write.csv(id_valid_dyad, file="rand_dyad.csv", row.names = F)
library(readr)
rand_dyad <- read_csv("rand_dyad.csv")
View(rand_dyad)
test <- rand_dyad%>%
group_by(R_IAD, S_IAD)%>%
summarize(N=n())
test <- rand_dyad%>%
group_by(R_ADL, S_ADL)%>%
summarize(N=n())
View(test)
dyad_1 <- rand_dyad%>%
filter(R_ADL >0 & S_ADL>0)
View(dyad_1)
dyad_2 <- set.diff(dyad_1, by=HHIDPN)
dyad_2 <- setdiff(dyad_1, by=HHIDPN)
dyad_2 <- setdiff(rand_dyad, dyad_1, by=HHIDPN)
View(dyad_2)
test <- dyad_1%>%
group_by(R_ADL, S_ADL)%>%
summarize(N=n())
test <- dyad_2%>%
group_by(R_ADL, S_ADL)%>%
summarize(N=n())
dyad_2 <- setdiff(rand_dyad, dyad_1, by=HHIDPN)%>%
filter(!is.na(R_ADL), !is.na(S_ADL))
test <- dyad_2%>%
group_by(R_ADL, S_ADL)%>%
summarize(N=n())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
library(ggplot2)
library(mosaic)
library(skimr)
rand <- read_csv("~/Desktop/data/randhrs.csv")
#glimpse(rand)
id <- rand %>%
select(HHIDPN, HHID, PN, RAHHIDPN,
R12CESD, S12CESD, #CESD Score, binary level yes or no
R12ADLA, S12ADLA #ADL Summary: sum ADLs where Respondent reports any difficulty
)
skim(id)
#rename
setnames(id ,
old=c("R12ADLA", "S12ADLA", "R12CESD", "S12CESD"),
new = c("R_ADL", "S_ADL", "R_CESD", "S_CESD"))
#filter out non-dyad individuals
id_valid <- id%>%
filter(!is.na(R_ADL) | !is.na(S_ADL), !is.na(R_CESD), !is.na(S_CESD))
#There shouldn't be any missing R_ADL
tally(id_valid$S_ADL)
#Missing S_ADL meaning that those helper don't have ADL
tally(id_valid$S_ADL)
#There shouldn't be any missing R_CESD, we want all informaiton
tally(id_valid$R_CESD)
#There shouldn't be any missing S_CESD, we want all informaiton
tally(id_valid$S_CESD)
View(id)
#filter out non-dyad individuals
id_valid <- id%>%
filter(!is.na(R_ADL), !is.na(S_ADL), !is.na(R_CESD), !is.na(S_CESD))
#There shouldn't be any missing R_ADL
tally(id_valid$S_ADL)
#Missing S_ADL meaning that those helper don't have ADL
tally(id_valid$S_ADL)
#There shouldn't be any missing R_CESD, we want all informaiton
tally(id_valid$R_CESD)
#There shouldn't be any missing S_CESD, we want all informaiton
tally(id_valid$S_CESD)
View(dyad_1)
qgamma(0.025, 62,8)
qgamma(0.975, 62,8)
47/5
qgammma(0.025, 17, 14)
qgamma(0.025, 17,14)
qgamma(0.975, 17,14)
qgamma(0.975, 14,17)
qgamma(0.975, 14,17)
qgamma(0.025, 14,17)
knitr::opts_chunk$set(echo = TRUE)
install.packages("BiocInstaller",
repos = "http://bioconductor.org/packages/3.4/bioc")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
devtools::install_github("beanumber/cranium")
install.packages("devtools")
devtools::install_github("beanumber/cranium")
file <- "~/experiments/data_split/Experiment/AT/AT_wildtype_101_Probabilities.h5"
library(cranium)
library(devtools)
devtools::install_github("beanumber/cranium")
library(cranium)
devtools::install_github("beanumber/cranium")
library(cranium)
devtools::install_github("beanumber/cranium")
install.packages("rhdf5")
rverison
version
install_cran()
# installing/loading the package:
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
updateR()
install.packages("installr")
update.packages()
R.version
#rhdf5
install.packages("rhdf5")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
library(ggplot2)
library(mosaic)
library(skimr)
helper_2014 <- read_sav("~/Desktop/data/H14G_HP.sav", encoding = NULL, user_na = FALSE)
helper_2014
helper_2014 <- helper_2014 %>%
mutate(OG70[is.na(OG70)<-0])
helper_2014 <- helper_2014 %>%
mutate(OG70[is.na(OG70)<-0])
helper_2014 <- helper_2014 %>%
mutate(OG70[is.na(OG70)<-0])
helper_2014 <- helper_2014 %>%
mutate(OG070[is.na(OG070)<-0])
helper_2014 <- helper_2014 %>%
mutate(OG070[is.na(OG070)=0])
helper_2014 <- helper_2014 %>%
mutate(OG070[is.na(OG070)==0])
helper_2014 <- helper_2014 %>%
filter(!is.na(OPN_SP))
helper_2014
helper_2014 <- read_sav("~/Desktop/data/H14G_HP.sav", encoding = NULL, user_na = FALSE)
View(helper_2014)
helper_2014 <- helper_2014 %>%
mutate(OG070 = coalesce(OG070,0))
OG070
helper_2014
helper_2014
helper_2014 <- read_sav("~/Desktop/data/H14G_HP.sav", encoding = NULL, user_na = FALSE)
helper_2014
helper_2014 <- helper_2014 %>%
filter(!is.na(OPN_SP))
#convert NA value in month/wk/day to 0
helper_2014 <- helper_2014 %>%
mutate(OG070 = coalesce(OG070,0),
OG071 = coalesce(OG071,0),
OG072 = coalesce(OG072,0),
OG073 = coalesce(OG073,0))
#filter out useless values in month/wk/day/hr
helper_2014 <- helper_2014 %>%
filter(OG070 %in% 0:31)
helper_2014
View(helper_2014)
helper_2014 <- read_sav("~/Desktop/data/H14G_HP.sav", encoding = NULL, user_na = FALSE)
View(helper_2014)
helper_2014 <- helper_2014 %>%
filter(!is.na(OPN_SP))
#convert NA value in month/wk/day to 0
helper_2014 <- helper_2014 %>%
mutate(OG070 = coalesce(OG070,0),
OG071 = coalesce(OG071,0),
OG072 = coalesce(OG072,0),
OG073 = coalesce(OG073,0))
#filter out useless values in month/wk/day/hr
helper_2014 <- helper_2014 %>%
filter(OG070 %in% 0:31,
OG071 %in% 0:7,
OG072 %in% 0:1,
OG073 %in% 1:24)
helper_2014 <- helper_2014 %>%
mutate(helper_time = OG70*OG073+OG071*4*OG073+OG072*30*OG073)
helper_2014 <- helper_2014 %>%
mutate(helper_time = OG070*OG073+OG071*4*OG073+OG072*30*OG073)
ggplot(data=helper_2014, aes(x=helper_time))+geom_histogram()
tally(helper_2014$helper_time=1)
tally(helper_2014$helper_time==1)
ggplot(data=helper_2014, aes(x=helper_time))+geom_histogram()
ggplot(data=helper_2014, aes(x=helper_time))+geom_histogram()
count(helper_2014$helper_time==1)
View(helper_2014)
library(ggplot2)
library(dplyr)
library(shiny)
library(rpart)
iris <- iris %>%
as_tibble() %>%
# Add ID column:
mutate(ID = 1:n()) %>%
select(ID, Species, Sepal.Length, Sepal.Width)
model_formula <- as.formula(Species ~ Sepal.Length + Sepal.Width)
inputPanel(
sliderInput("cp", label = "Tuning parameter alpha:", min = 0, max = 0.5, value = 0.1, step = 0.001)
)
renderPlot({
# Create tree
tree_parameters <- rpart.control(maxdepth = 3, cp=input$cp)
model_CART <- rpart(model_formula, data = iris, control=tree_parameters)
# Plot
plot(model_CART, margin=0.25)
text(model_CART, use.n = TRUE)
title("Predicting iris species using sepal length & width")
box()
}, height=900/2, width=1600/2)
library(ggplot2)
library(dplyr)
library(shiny)
library(rpart)
iris <- iris %>%
as_tibble() %>%
# Add ID column:
mutate(ID = 1:n()) %>%
select(ID, Species, Sepal.Length, Sepal.Width)
model_formula <- as.formula(Species ~ Sepal.Length + Sepal.Width)
inputPanel(
sliderInput("cp", label = "Tuning parameter alpha:", min = 0, max = 0.5, value = 0.1, step = 0.001)
)
renderPlot({
# Create tree
tree_parameters <- rpart.control(maxdepth = 3, cp=input$cp)
model_CART <- rpart(model_formula, data = iris, control=tree_parameters)
# Plot
plot(model_CART, margin=0.25)
text(model_CART, use.n = TRUE)
title("Predicting iris species using sepal length & width")
box()
}, height=900/2, width=1600/2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
library(ggplot2)
library(mosaic)
library(skimr)
#functions
'%ni%' <- Negate('%in%')
#year: 2016
helper <- read_sav("/Users/crystalzang/Desktop/data/helper/H14G_HP.sav", encoding = NULL, user_na = FALSE)%>%
filter(!is.na(OPN_SP))%>%
filter(OPN_SP %ni% c("","811", "812", "821", "831", "832", "841", "822"))%>%
mutate(respondent_id= paste(HHID, PN, sep=""), spouse_id=paste(HHID, OPN_SP, sep=""))%>%
filter(OG069 == "2")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
library(ggplot2)
library(mosaic)
library(skimr)
helper_2014 <- read_sav("~/Desktop/data/H14G_HP.sav", encoding = NULL, user_na = FALSE)
helper_2014 <- helper_2014 %>%
filter(!is.na(OPN_SP))
#convert NA value in month/wk/day to 0
helper_2014 <- helper_2014 %>%
mutate(OG070 = coalesce(OG070,0),
OG071 = coalesce(OG071,0),
OG072 = coalesce(OG072,0),
OG073 = coalesce(OG073,0))
#filter out useless values in month/wk/day/hr
helper_2014 <- helper_2014 %>%
filter(OG070 %in% 0:31,
OG071 %in% 0:7,
OG072 %in% 0:1,
OG073 %in% 1:24)
#calculate helping hours (assume that one month has 4 weeks and 30 days)
helper_2014 <- helper_2014 %>%
mutate(helper_hour = OG070*OG073+OG071*4*OG073+OG072*30*OG073)
helper_2014
helper_2014 <- read_sav("~/Desktop/data/H14G_HP.sav", encoding = NULL, user_na = FALSE)
helper_2014
helper_2014 <- read_sav("~/Desktop/data/H14G_HP.sav", encoding = NULL, user_na = FALSE)
rand_dyad <- read_csv("rand_dyad.csv")
id_valid_dyad   <-read_csv("rand_dyad.csv")
class(id_valid_dyad$HHIDPN)
class(helper_id$respondent_id)
id_valid_dyad   <-read_csv("rand_dyad.csv")
helper_f <- helper %>%
filter(sex=="2.Female")
rand_dyad <- read_csv("rand_dyad.csv")
View(rand_dyad)
id_valid_dyad   <-read_csv("rand_dyad.csv")
helper_f <- helper %>%
filter(sex=="2.Female")
dyad_helper_f <- read_sav("~/Desktop/data/dyad_helper_f.csv")
dyad_helper_f <- read_csv("~/Desktop/data/dyad_helper_f.csv")
dyad_helper_f <- read_csv("dyad_helper_f.csv")
View(dyad_helper_f)
library(tidyverse)
#install.packages("lavaan")
library(lavaan)
acitelli <- read_csv("http://www.science.smith.edu/~rgarcia/sds390-S19/acitelli-individual.csv")
acitelli <- acitelli %>%
mutate(gender_string  = ifelse(gender == -1, "woman", "man"))
acitelli
dyad_helper_f<- dyad_helper_f%>%
unite(sex, helper_status, sep = "_")
dyad_helper_f
acitelli_dyad <- acitelli %>%
gather(self_pos:simhob, key = "the_old_vars", value = "score") %>%
select(-gender) %>%
unite(the_new_vars, the_old_vars, gender_string, sep = "_", remove = TRUE) %>%
spread(the_new_vars, score)
acitelli_dyad
dyad_helper_f <- dyad_helper_f %>%
group_by(sex)
dyad_helper_f
dyad_helper_f <- read_csv("dyad_helper_f.csv")
dyad_helper_f <- dyad_helper_f %>%
group_by(sex)
dyad_helper_f
dyad_helper_sex <- dyad_helper_f %>%
gather(R_CESD:S_ADL, key="the_old_vars",value="score") %>%
select(-sex)%>%
mutate(the_new_vars,the_old_vars,sex_string,sep="_",remove=TRUE)%>%
spread(the_new_vars,score)
?unite()
library(tidyverse)
dyad_helper_sex <- dyad_helper_f %>%
gather(R_CESD:S_ADL, key="the_old_vars",value="score") %>%
select(-sex)%>%
mutate(the_new_vars,the_old_vars,sex_string,sep="_",remove=TRUE)%>%
spread(the_new_vars,score)
library(tidyverse)
dyad_helper_sex <- dyad_helper_f %>%
gather(R_CESD:S_ADL, key="the_old_vars",value="score") %>%
select(sex)%>%
mutate(the_new_vars,the_old_vars,sex_string,sep="_",remove=TRUE)%>%
spread(the_new_vars,score)
dyad_helper_f <- dyad_helper_f %>%
unite(sex,R_ADL)
dyad_helper_f
dyad_helper_f <- read_csv("dyad_helper_f.csv")
dyad_helper_f_new <- dyad_helper_f %>%
select(sex="2.Female") %>%
rename(R_CESD=Female_CESD)
dyad_helper_f_new <- dyad_helper_f %>%
select(sex=="2.Female") %>%
rename(R_CESD=Female_CESD)
dyad_helper_f <- read_csv("dyad_helper_f.csv")
dyad_helper_f_new <- dyad_helper_f %>%
select(sex=="2.Female") %>%
rename(R_CESD=Female_CESD)
dyad_helper_f_new <- dyad_helper_f %>%
mutate(R_ADL=ifelse(sex="2.Female","female_ADL","male_ADL"))
dyad_helper_f_new <- dyad_helper_f %>%
mutate(R_ADL=ifelse(sex=="2.Female","female_ADL","male_ADL"))
dyad_helper_f_new
dyad_helper_f <- read_csv("dyad_helper_f.csv")
dyad_helper_f_new <- dyad_helper_f %>%
mutate(R_ADL=ifelse(sex=="2.Female",female_ADL,male_ADL))
dyad_helper_f_new <- dyad_helper_f %>%
rename(R_ADL=ifelse(sex=="2.Female","female_ADL","male_ADL"))
dyad_helper_f_new <- dyad_helper_f %>%
rename(R_ADL=ifelse(sex=="2.Female","female_ADL","male_ADL"))
dyad_helper_f <- read_csv("dyad_helper_f.csv")
dyad_helper_f_new <- dyad_helper_f %>%
rename(R_ADL=ifelse(sex=="2.Female","female_ADL","male_ADL"))
dyad_helper_f
dyad_helper_f_new <- dyad_helper_f %>%
mutate(R_ADL=ifelse(sex=="2.Female","female_ADL","male_ADL"))
dyad_helper_f_new
acitelli
the_new_vars
acitelli_dyad <- acitelli %>%
gather(self_pos:simhob, key = "the_old_vars", value = "score") %>%
select(-gender) %>%
unite(the_new_vars, the_old_vars, gender_string, sep = "_", remove = TRUE) %>%
spread(the_new_vars, score)
acitelli_dyad
the_new_vars
