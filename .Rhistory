#metric
metric.fit = sem(model_all, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
group.equal=c("intercept", "regression"),estimator= "MLMV")
#metric
metric.fit = sem(model_all, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
group.equal=c("intercept", "regressions"),estimator= "MLMV")
#metric
metric.fit = sem(model_all, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
group.equal=c("intercepts", "regressions"),estimator= "MLMV")
summary(metric.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
free.fit = sem(model_all, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
constrain.fit = sem(model_all, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
group.equal=c("intercepts", "regressions"),estimator= "MLMV")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
model_free<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + c("b1", "b1") * S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL +  S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
#configural invariance
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#metric
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
group.equal=c("intercepts", "regressions"),estimator= "MLMV")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
model_free<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + c("b1", "b1") * S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL +  S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
#free
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#constrained
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
group.equal=c("intercepts", "regressions"),estimator= "MLMV")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#constrained
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
group.equal=c("intercepts", "regressions"),estimator= "MLMV")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
group=c("group"),estimator= "MLMV")
#constrained
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
group.equal=c("group"),estimator= "MLMV")
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
estimator= "MLMV")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
#free
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#Use this!!!!!
model_free<- '
S_CESD ~ S_ADL  + S_self_health + S_age
R_CESD ~ R_ADL + S_self_health + R_self_health + S_age
S_self_health ~ S_ADL + S_age
R_self_health ~ R_ADL + S_self_health + S_age
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health + S_age
R_CESD ~ R_ADL + c("b1", "b1") * S_self_health + R_self_health  + S_age
S_self_health ~ S_ADL + S_age
R_self_health ~ R_ADL +  S_self_health + S_age
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
#free
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
model_free<- '
S_CESD ~ S_ADL  + S_self_health + S_age
R_CESD ~ R_ADL + S_self_health + R_self_health + S_age
S_self_health ~ S_ADL + S_age
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
model_free<- '
S_CESD ~ S_ADL  + S_self_health + S_age
R_CESD ~ R_ADL + S_self_health + R_self_health + S_age
S_self_health ~ S_ADL + S_age
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health + S_age
R_CESD ~ R_ADL + c("b1", "b1") * S_self_health + R_self_health  + S_age
S_self_health ~ S_ADL + S_age
R_self_health ~ R_ADL +  S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
#free
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
estimator= "MLMV")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),
estimator= "MLMV")
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group = c("intercepts", "regressions"),
estimator= "MLMV")
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV")
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health + S_age
R_CESD ~ R_ADL + S_self_health + R_self_health  + S_age
S_self_health ~ S_ADL + S_age
R_self_health ~ R_ADL +  S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV")
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV")
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health + S_age
R_CESD ~ R_ADL + S_self_health + R_self_health  + S_age
S_self_health ~ S_ADL + S_age
R_self_health ~ R_ADL +  S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
model_free<- '
S_CESD ~ S_ADL  + S_self_health + S_age
R_CESD ~ R_ADL + S_self_health + R_self_health + S_age
S_self_health ~ S_ADL + S_age
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health + S_age
R_CESD ~ R_ADL + S_self_health + R_self_health  + S_age
S_self_health ~ S_ADL + S_age
R_self_health ~ R_ADL +  S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV")
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV")
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV", fixed.x=FALSE)
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
pchisq(19.918, 33, lower.tail = FALSE)
Cpchisq(22.049, 16, lower.tail = FALSE)
pchisq(22.049, 16, lower.tail = FALSE)
anova(constrain.fit)
model_free<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + c("b1", "b1") * S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL +  S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV", fixed.x=FALSE)
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL +  S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV", fixed.x=FALSE)
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV", fixed.x=FALSE)
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
model <- lm(sex~ ., data = dyad)
??glm
model <- glm(sex~ ., data = dyad,family=binomial)
dyad_all_helper_final$sex
dyad_all_helper_final$sex <- as.factor(dyad_all_helper_final$sex)
model <- glm(sex~ ., data = dyad,family=binomial)
dyad <- dyad_all_helper_final%>%
select(-HHIDPN, -PN, -dyad, -helper_status, -HHID, -R_ADL_binary, -R_IADL)%>%
mutate(sex = if_else(sex == "1.Male"), 1, 0)
dyad <- dyad_all_helper_final%>%
select(-HHIDPN, -PN, -dyad, -helper_status, -HHID, -R_ADL_binary, -R_IADL)%>%
mutate(sex = if_else(sex = "1.Male"), 1, 0)
dyad <- dyad_all_helper_final%>%
select(-HHIDPN, -PN, -dyad, -helper_status, -HHID, -R_ADL_binary, -R_IADL)%>%
mutate(sex = if_else(sex = "2.Female"), 0, 1)
dyad <- dyad_all_helper_final%>%
select(-HHIDPN, -PN, -dyad, -helper_status, -HHID, -R_ADL_binary, -R_IADL)%>%
mutate(sex = if_else(sex == "2.Female"), 0, 1)
dyad <- dyad_all_helper_final%>%
select(-HHIDPN, -PN, -dyad, -helper_status, -HHID, -R_ADL_binary, -R_IADL)%>%
mutate(sex = if_else(sex == "2.Female", 0, 1))
dyad$sex <- as.factor(dyad$sex)
model <- glm(sex~ ., data = dyad,family=binomial)
model <- glm(sex~ ., data = dyad,family=poisson)
dyad <- dyad_all_helper_final%>%
select(-HHIDPN, -PN, -dyad, -helper_status, -HHID, -R_ADL_binary, -R_IADL)
dyad$sex <- as.factor(dyad$sex)
model <- glm(sex~ ., data = dyad, family=binomial)
model_free<- '
S_CESD ~ S_ADL + R_ADL  + S_self_health
R_CESD ~ R_ADL + S_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL + R_ADL
R_self_health ~ R_ADL + S_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
#free
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
model_free<- '
S_CESD ~ S_ADL + R_ADL  + S_self_health  + R_self_health
R_CESD ~ R_ADL + S_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL + R_ADL
R_self_health ~ R_ADL + S_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
#free
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
'
model_constrain<- '
S_CESD ~ S_ADL + R_ADL  + S_self_health  + R_self_health
R_CESD ~ R_ADL + S_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL + R_ADL
R_self_health ~ R_ADL + S_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV", fixed.x=FALSE)
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(constrain.fit)
anova(free.fit, constrain.fit)
model_constrain<- '
S_CESD ~ S_ADL + R_ADL  + S_self_health  + R_self_health
R_CESD ~ R_ADL + S_ADL + c("b1", "b1") * S_self_health + R_self_health
S_self_health ~ S_ADL + R_ADL
R_self_health ~ R_ADL + S_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex",
estimator= "MLMV")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(constrain.fit)
anova(free.fit, constrain.fit)
anova(free.fit, constrain.fit)
model_constrain<- '
S_CESD ~ S_ADL + R_ADL  + S_self_health  + R_self_health
R_CESD ~ R_ADL + S_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL + R_ADL
R_self_health ~ R_ADL + S_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV", fixed.x=FALSE)
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#free
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV", test="bootstrap")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
model_free<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator= "MLMV", test="bootstrap")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"),estimator= "MLMV", fixed.x=FALSE, test="bootstrap")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", test="bootstrap")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"), test="bootstrap")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + c("b1", "b1") *S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", group.equal = c("intercepts", "regressions"), test="bootstrap")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#constrained
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", test="bootstrap")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
anova(free.fit, constrain.fit)
anova(constrain.fit)
model_constrain<- '
S_CESD ~ S_ADL + R_ADL  + S_self_health  + R_self_health
R_CESD ~ R_ADL + S_ADL + c("b1", "b1") * S_self_health + R_self_health
S_self_health ~ S_ADL + R_ADL
R_self_health ~ R_ADL + S_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
#constrained
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", test="bootstrap")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#constrained
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator = "MLME")
#constrained
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator = "MLMV")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
model_constrain<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + c("b1", "b1") *S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
#constrained
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator = "MLMV")
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#constrained
#constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator = "MLMV")
constrain.fit = sem(model_constrain, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator = "MLMV", group.equal = c("intercepts", "regressions"))
summary(constrain.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
1-0.985
??stargazer
library(stargazer)
install.packages("stargazer")
library(stargazer)
stargazer(dyad_all_helper,  type="text", title="Table 1")
stargazer(dyad_all_helper_final,  type="text", title="Table 1")
tb1<- dyad_all_helper_final%>%
select(R_age, S_age, R_ADL, S_ADL, R_self_health, S_self_health, S_CESD, R_CESD)
stargazer(tb1,  type="text", title="Table 1")
stargazer(tb1,  type="text", title="Table 1", out="table.txt")
View(tb1)
knitr::opts_chunk$set(echo = TRUE)
dyad_all_helper_final <- read_csv("data/dyad_all_helper_final.csv")%>%
select(-X1)
tb1<- dyad_all_helper_final%>%
select(R_age, S_age, R_ADL, S_ADL, R_self_health, S_self_health, S_CESD, R_CESD)
library(stargazer)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
stargazer(tb1,  type="text", title="Table 1", out="table.txt")
library(dplyr)
library(tableone)
install.packages("tableone")
library(tableone)
tb1<- dyad_all_helper_final%>%
select(R_age, S_age, R_ADL, S_ADL, R_self_health, S_self_health, S_CESD, R_CESD)
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
CreateTableOne(data = tb1)
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
CreateTableOne(data = tb1, strata = "sex")
tb1<- dyad_all_helper_final%>%
select(R_age, S_age, R_ADL, S_ADL, R_self_health, S_self_health, S_CESD, R_CESD, sex)
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
CreateTableOne(data = tb1, strata = "sex")
dyad_all_helper_final$sex
table(dyad_all_helper_final$sex)
tb1<- dyad_all_helper_final%>%
select(R_age, S_age, R_ADL, S_ADL, R_self_health, S_self_health, S_CESD, R_CESD, sex)
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
CreateTableOne(data = tb1, strata = "sex")
tb1<- dyad_all_helper_final%>%
select(R_age, S_age, R_ADL, S_ADL, R_self_health, S_self_health, S_CESD, R_CESD, sex, hhour.z)
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
CreateTableOne(data = tb1, strata = "sex")
tb1<- dyad_all_helper_final%>%
select(R_age, S_age, R_ADL, S_ADL, R_self_health, S_self_health, S_CESD, R_CESD, sex)
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
CreateTableOne(data = tb1, strata = "sex")
tb1<- dyad_all_helper_final%>%
select(R_age, S_age, R_ADL, S_ADL, R_self_health, S_self_health, R_CESD, S_CESD, sex, cohort)
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
CreateTableOne(data = tb1, strata = "sex")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
CreateTableOne(data = tb1, strata = "sex")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
#stargazer(tb1,  type="text", title="Table 1", out="table.txt")
CreateTableOne(data = tb1)
favstats(tb1$R_ADL)
model_free<- '
S_CESD ~ S_ADL  + S_self_health
R_CESD ~ R_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL
R_self_health ~ R_ADL + S_self_health
S_ADL ~~ R_ADL
S_CESD ~~ R_CESD
'
female <- dyad_all_helper_final%>%
filter(sex == "2.Female")
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(tableone)
library(dplyr)
dyad_all_helper_final <- read_csv("data/dyad_all_helper_final.csv")%>%
select(-X1)
library(readr)
dyad_all_helper_final <- read_csv("data/dyad_all_helper_final.csv")%>%
select(-X1)
model_free<- '
S_CESD ~ S_ADL + R_ADL  + S_self_health  + R_self_health
R_CESD ~ R_ADL + S_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL + R_ADL
R_self_health ~ R_ADL + S_ADL + S_self_health
S_CESD ~~ R_CESD
'
female <- dyad_all_helper_final%>%
filter(sex == "2.Female")
female.fit = sem(model_free, data = female, meanstructure=TRUE, estimator= "MLMV")
library(lavaan)
female <- dyad_all_helper_final%>%
filter(sex == "2.Female")
female.fit = sem(model_free, data = female, meanstructure=TRUE, estimator= "MLMV")
summary(female.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#male
male <- dyad_all_helper_final%>%
filter(sex == "1.Male")
male.fit = sem(model_freel, data = male, meanstructure=TRUE,estimator= "MLMV")
male.fit = sem(model_free, data = male, meanstructure=TRUE,estimator= "MLMV")
summary(male.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
summary(male.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
#free model
model_free<- '
S_CESD ~ S_ADL + R_ADL  + S_self_health  + R_self_health
R_CESD ~ R_ADL + S_ADL + S_self_health + R_self_health
S_self_health ~ S_ADL + R_ADL
R_self_health ~ R_ADL + S_ADL
S_self_health~~ R_self_health
S_CESD ~~ R_CESD
'
free.fit = sem(model_free, data = dyad_all_helper_final, meanstructure=TRUE, group= "sex", estimator="MLMV")
summary(free.fit, standardized = TRUE, fit.measures = TRUE, rsquare = TRUE)
