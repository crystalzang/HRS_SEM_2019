#Do we instead us PC? PC271,PC272,PC273 in section C: Physical Health (respondent)
setnames(h16_R_all_id ,
old=c("PG032_1", "PG033_1", "PZ260", "PZ261", "PZ262", "PG016", "PG021", "PG023","PG025", "PG030", "PG014", "px060_R"),
new = c("WHO_HELPS_MOST_ADL_1", "ADL_HELPER_RELATIONSHIP_TO_R_1", "depression", "alzheimer","dementia", "ADL_walk", "ADL_shower", "ADL_eat", "ADL_bed", "ADL_toilet", "ADL_dress", "respondent_sex"))
#Do we instead us PC? PC271,PC272,PC273 in section C: Physical Health (respondent)
setnames(h16_R_all_id ,
old=c("PG032_1", "PG033_1", "PZ260", "PZ261", "PZ262", "PG016", "PG021", "PG023","PG025", "PG030", "PG014", "PX060_R"),
new = c("WHO_HELPS_MOST_ADL_1", "ADL_HELPER_RELATIONSHIP_TO_R_1", "depression", "alzheimer","dementia", "ADL_walk", "ADL_shower", "ADL_eat", "ADL_bed", "ADL_toilet", "ADL_dress", "Sex.R"))
h16_R_all_adl<-h16_R_all_id %>%
filter(ADL_walk %in% c(1,5),
ADL_shower %in% c(1,5),
ADL_eat %in% c(1,5),
ADL_bed %in% c(1,5),
ADL_toilet %in% c(1,5),
ADL_dress %in% c(1,5))
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))
dyad <- dyad %>%
mutate(helper = if_else(Helper_Relationship == 2, "Y", "N"))
#A dataset that contains all the helpers who are also respondents. Spouse_id is the helper's id. Respondent_id is their spouse's id.
helper_also_respondent <- dyad %>%
filter(helper== "Y")
View(helper_also_respondent)
#A dataset that contains all the helpers who are also respondents. Spouse_id is the helper's id. Respondent_id is their spouse's id.
helper_also_respondent <- dyad %>%
filter(helper== "Y")%>%
mutate(Sex.H = Sex.R)
respondent_only <- setdiff(dyad, helper_also_respondent)
#A dataset that contains all the helpers who are also respondents. Spouse_id is the helper's id. Respondent_id is their spouse's id.
helper_also_respondent <- dyad %>%
filter(helper== "Y")%>%
mutate(Sex.H = Sex.R)
respondent_only <- setdiff(dyad, helper_also_respondent)
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y")
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"))
View(dyad)
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y"))
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "N"))
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"))%>%
mutate(resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "N"))
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"))
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"),
identidy = if_else(resondent_and_helper=="Y", "Resondent and helper",
if_else(helper=="Y" & respondent=="N", "Only helper", "Only respondent")))
test<- dyad%>%
group_by(respondent, helper, resondent_and_helper)%>%
summarize(N=n())
View(test)
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"),
identidy = if_else(resondent_and_helper=="Y", "Resondent and helper",
if_else(respondent=="Y", "Only respondent")))
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"),
identidy = if_else(resondent_and_helper=="Y", "Resondent and helper",
if_else(respondent=="Y", "Only respondent", "wHAT")))
View(dyad)
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"),
identidy = if_else(resondent_and_helper=="Y", "Resondent and helper",
if_else(respondent=="Y" & helper =="N", "Only respondent", "wHAT")))
View(dyad)
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"),
identidy = if_else(resondent_and_helper=="Y", "Resondent and helper","Only respondent"))
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"))%>%
mutate(identidy = if_else(resondent_and_helper=="Y", "Resondent and helper","Only respondent"))
View(dyad)
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"))%>%
mutate(identity = if_else(resondent_and_helper=="Y", "Resondent and helper","Only respondent"))
table(dyad$identity)
dyad <- left_join(h16_R_all_adl, helper_id, by = c("spouse_id"="respondent_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"))%>%
mutate(identity = if_else(resondent_and_helper=="Y", "Resondent and helper", "Only respondent"))
dyad_identity<-dyad%>%
mutate(identity = if_else(resondent_and_helper=="Y", "Resondent and helper", "Only respondent"))
View(dyad_identity)
dyad_identity<-dyad%>%
mutate(identity = if_else(respondent=="Y" & helper=="Y", "Resondent and helper", "Only respondent"))
View(dyad_identity)
if_else(respondent=="Y" & helper =="N","Only respondent", "IDK"))
dyad_identity<-dyad%>%
mutate(identity = if_else(respondent=="Y" & helper=="Y", "Resondent and helper",
if_else(respondent=="Y" & helper =="N","Only respondent", "IDK")))
View(dyad_identity)
dyad_identity<-dyad%>%
mutate(identity = if_else(respondent=="Y" & helper =="N","Only respondent",
if_else(respondent=="Y" & helper=="Y", "Resondent and helper","IDK")))
View(dyad_identity)
test<- dyad%>%
group_by(respondent, helper, resondent_and_helper)%>%
summarize(N=n())
test<- dyad%>%
group_by(respondent, helper, resondent_and_helper)%>%
summarize(N=n())
View(test)
dyad <- left_join(h16_R_all_adl, helper_id, by = c("respondent_id"="spouse_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"))%>%
mutate(identity = if_else(resondent_and_helper=="Y", "Resondent and helper", "Only respondent")) ##I have a bug here. I don't know why the alternative level"Only respondent" is not showing up here
View(helper_id)
helper_id<-helper%>%
select(respondent_id, spouse_id, Helper_Relationship, Freqency_help, Helper_sex)
dyad <- left_join(h16_R_all_adl, helper_id, by = c("respondent_id"="spouse_id"))%>%
mutate(respondent="Y",
helper = if_else(Helper_Relationship == 2, "Y", "N"),
resondent_and_helper= if_else(respondent=="Y" & helper=="Y", "Y", "N"))%>%
mutate(identity = if_else(resondent_and_helper=="Y", "Resondent and helper", "Only respondent")) ##I have a bug here. I don't know why the alternative level"Only respondent" is not showing up here
#A dataset that contains all the helpers who are also respondents. Spouse_id is the helper's id. Respondent_id is their spouse's id.
helper_and_respondent <- dyad %>%
filter(helper== "Y")%>%
mutate(Sex.H = Sex.R)
respondent_only <- setdiff(dyad, helper_and_respondent)
View(helper_also_respondent)
#Prep dataset ready for join. Only include 2 variables
helper_and_respondent_id<-helper_and_respondent%>%
select(spouse_id, helper)
#Prep dataset ready for join. Only include 2 variables
helper_and_respondent_id<-helper_and_respondent%>%
select(respondent_id,spouse_id, helper)
View(dyad_couple)
dyad_couple <- left_join(dyad, helper_also_respondent_id, by="respondent_id")
#Join
#We want to find the mathcing respondents to our helpers
dyad_couple <- left_join(dyad, helper_also_respondent_id, by=c("spouse_id" ="respondent_id"))
#Join
#We want to find the mathcing respondents to our helpers
#Matching respondent_id (the people those helpers are helping) to the respondent in dyad data.
dyad_couple <- left_join(dyad, helper_also_respondent_id, by=c("spouse_id" ="respondent_id"))
View(helper)
#single people
test<-dyad_couple%>%
group_by(HHID)%>%
summarize(N=n())
View(helper_id)
dyad_hhhh <- left_join(helper_id, h16_R_all_adl, by ="respondent_id")
View(dyad_hhhh)
View(h16_R_all_adl)
h16_R_all_adl_id<-h16_R_all_adl%>%
select(respondent_id,sex.R)
h16_R_all_adl_id<-h16_R_all_adl%>%
select(respondent_id,sex.R)
h16_R_all_adl_id<-h16_R_all_adl%>%
select(respondent_id, Sex.R)
h16_R_all_adl_id<-h16_R_all_adl%>%
select(respondent_id, Sex.R)
dyad_hhhh <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
helper_all<- helper%>%
select(respondent_id)
View(helper_all)
setdiff(helper_all, helper_also_respondent)
setdiff(helper_all, helper_also_respondent$respondent_id)
setdiff(helper_all$respondent_id, helper_also_respondent$respondent_id)
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
helper_only<-setdiff(helper$respondent_id, helper_also_respondent$respondent_id)
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
helper_only<-setdiff(helper$respondent_id, helper_also_respondent$respondent_id)%>%
as.data.frame()
View(helper_only)
helper_only2 <- left.join(helper, helper_only)
helper_only2 <- left.join(helper, helper_only, by=c("respondent_id", "."))
helper_only2 <- left_join(helper, helper_only, by=c("respondent_id", "."))
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
helper_only<-setdiff(helper$respondent_id, helper_also_respondent$respondent_id)
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
helper_only<-setdiff(helper$respondent_id, helper_also_respondent$respondent_id)%>%
as.data.frame(colnames(respondent_id))
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
helper_only<-setdiff(helper$respondent_id, helper_also_respondent$respondent_id)%>%
as.data.frame(col.names="respondent_id"))
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
helper_only<-setdiff(helper$respondent_id, helper_also_respondent$respondent_id)%>%
as.data.frame(col.names="respondent_id")
View(helper_only)
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
helper_only <- setdiff(helper$respondent_id, helper_also_respondent$respondent_id)
helper_only_id <-as.data.frame(helper_only, col.names="respondent_id")
View(helper_only_id)
helper_only2 <- left_join(helper, helper_only, by="respondent_id")
helper_only2 <- left_join(helper, helper_only_id, by="respondent_id")
helper_only_id <-as.data.frame(helper_only, col.names="respondent_id")%>%
mutate(identity="Helper_only")
helper_only2 <- left_join(helper, helper_only_id, by="respondent_id")
View(helper)
helper$respondent_id
helper_only_id$respondent_id
helper_only_id <-as.data.frame(helper_only, col.names="respondent_id")%>%
mutate(identity="Helper_only")
View(helper_only_id)
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
respondent_id <- setdiff(helper$respondent_id, helper_also_respondent$respondent_id)
helper_only_id <-as.data.frame(respondent_id)%>%
mutate(identity="Helper_only")
helper_only2 <- left_join(helper, helper_only_id, by="respondent_id")
View(helper_only2)
helper_only2 <- left_join(helper, helper_only_id, by="respondent_id")%>%
filter(identity="Helper_only")
helper_only2 <- left_join(helper, helper_only_id, by="respondent_id")%>%
filter(identity=="Helper_only")
View(dyad_couple)
View(helper_only2)
##Join again
helper_only2_id<-helper_only2%>%
select(respondent_id, spouse_id, Helper_Relationship, Freqency_help, Helper_sex)
dyad <- left_join(h16_R_all_adl, helper_only2_id, by ="spouse")
dyad <- left_join(h16_R_all_adl, helper_only2_id, by ="spouse_id")
dyad2 <- left_join(h16_R_all_adl, helper_only2_id, by ="spouse_id")
View(dyad2)
dyad2 <- left_join(h16_R_all_adl, helper_only2_id, by ="spouse_id")%>%
filter(Helper_Relationship==2)%>%
mutate(respondent=NA,
helper =="Y",
resondent_and_helper= "N",
identity = "Only helper")
dyad2 <- left_join(h16_R_all_adl, helper_only2_id, by ="spouse_id")%>%
filter(Helper_Relationship==2)%>%
mutate(respondent=NA,
helper ="Y",
resondent_and_helper= "N",
identity = "Only helper")
table(dyad$identity)
table(dyad2$identity)
dyad2 <- left_join(h16_R_all_adl, helper_only2_id, by ="spouse_id")%>%
filter(Helper_Relationship==2)%>%
mutate(respondent=NA,
helper.x ="Y",
helper.y = "N",
resondent_and_helper= "N",
identity = "Only helper")
dyad_complete <- rbind(dyad_couple, dyad2)
dyad_complete <- rbind(dyad_couple, dyad2)
h16_R_all_adl_id<-h16_R_all_adl%>%
select(respondent_id, Sex.R)
#match help recipients to their helpers
#helper_all <- left_join(helper_id, h16_R_all_adl_id, by ="respondent_id")
respondent_id <- setdiff(helper$respondent_id, helper_also_respondent$respondent_id)
helper_only_id <-as.data.frame(respondent_id)%>%
mutate(identity="Helper_only")
helper_only2 <- left_join(helper, helper_only_id, by="respondent_id")%>%
filter(identity=="Helper_only")
View(helper_only2)
##Join again
helper_only2_id<-helper_only2%>%
select(spouse_id, Helper_Relationship, Freqency_help, Helper_sex)
dyad2 <- left_join(h16_R_all_adl, helper_only2_id, by ="spouse_id")%>%
filter(Helper_Relationship==2)%>%
mutate(respondent=NA,
helper.x ="Y",
helper.y = "N",
resondent_and_helper= "N",
identity = "Only helper")
View(dyad2)
#We are using both helper.x and helper.y to identify couples
#helper.x means help giver. help.y means help recipient.
dyad_couple <- dyad_couple%>%
filter(helper.x=="Y" | helper.y =="Y")%>%
select(-respondent_id.y)
dyad_complete <- rbind(dyad_couple, dyad2)
View(dyad_complete)
#single people
test<-dyad_complete%>%
group_by(HHID)%>%
summarize(N=n())
View(test)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
#setwd("/Users/crystalzang/Desktop/data")
#individual
h16_R_all <- read_csv("~/Desktop/data/h16_R_all.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
library(ggplot2)
library(mosaic)
library(skimr)
rand <- read_csv("~/Desktop/data/randhrs.csv")
#glimpse(rand)
id <- rand %>%
select(HHIDPN, HHID, PN, RAHHIDPN,
R12CESD, S12CESD, #CESD Score, binary level yes or no
R12ADLA, S12ADLA #ADL Summary: sum ADLs where Respondent reports any difficulty
)
skim(id)
#rename
setnames(id ,
old=c("R12ADLA", "S12ADLA", "R12CESD", "S12CESD"),
new = c("R_ADL", "S_ADL", "R_CESD", "S_CESD"))
#rename
setnames(id ,
old=c("R12ADLA", "S12ADLA", "R12CESD", "S12CESD"),
new = c("R_ADL", "S_ADL", "R_CESD", "S_CESD"))
View(id)
id_valid <- id%>%
filter(!is.na(R_ADL) | !is.na(S_ADL))
View(id_valid)
tally(id_vali$R_ADL)
tally(id_valid$R_ADL)
id_valid <- id%>%
filter(!is.na(R_ADL) | !is.na(S_ADL), !is.na(R_CESD) | !is.na(S_CESD))
tally(id_valid$R_ADL)
tally(id_valid$S_ADL)
View(id_valid)
#Missing S_CESD meaning that those helper don't have ADL
tally(id_valid$S_CESD)
#filter out non-dyad individuals
id_valid <- id%>%
filter(!is.na(R_ADL) | !is.na(S_ADL), !is.na(R_CESD), !is.na(S_CESD))
#Missing S_CESD meaning that those helper don't have ADL
tally(id_valid$S_CESD)
id_group<-id_valid%>%
group_by(HHID)%>%
summarize(N=n())
View(id_group)
tally(id_group$N)
id_valid_dyad <- id_group%>%
filter(N==2)%>%
select(HHID)
id_valid_dyad_id <- id_group%>%
filter(N==2)%>%
select(HHID)
View(id_valid_dyad_id)
id_valid_dyad <- left_join(id_valid, id_valid_dyad_id, by="HHID")
View(id_valid_dyad)
View(id_valid_dyad)
id_valid_dyad <- left_join(id_valid, id_valid_dyad_id, by="HHID")
View(id_valid_dyad)
View(id_valid)
#Valid dyad HHID
id_valid_dyad_id <- id_group%>%
filter(N==2)%>%
select(HHID)%>%
mutate(dyad == "Y")
#Valid dyad HHID
id_valid_dyad_id <- id_group%>%
filter(N==2)%>%
select(HHID)%>%
mutate(dyad = "Y")
id_valid_dyad <- left_join(id_valid, id_valid_dyad_id, by="HHID")
id_valid_dyad <- left_join(id_valid, id_valid_dyad_id, by="HHID")%>%
filter(dyad == "Y")
ggplot( data = id_valid_dyad, aes(x = R_ADL)) + geom_histogram(binwidth = 1) + labs(title = "ADL respondent")
ggplot( data = id_valid_dyad, aes(x = S_ADL)) + geom_histogram(binwidth = 1) + labs(title = "ADL spouse")
ggplot( data = id_valid_dyad, aes(x = R_CESD)) + geom_histogram(binwidth = 1) + labs(title = "CESD respondent")
ggplot( data = id_valid_dyad, aes(x = S_CESD)) + geom_histogram(binwidth = 1) + labs(title = "CESD spouse")
write.csv(id_valid_dyad, file="S:/Desktop/HRS_SEM_2019/rand_dyad.csv")
write.csv(id_valid_dyad, file="S:/Desktop/HRS_SEM_2019/rand_dyad.csv", row.names = F)
write.csv(id_valid_dyad, file="rand_dyad.csv", row.names = F)
library(readr)
rand_dyad <- read_csv("rand_dyad.csv")
View(rand_dyad)
test <- rand_dyad%>%
group_by(R_IAD, S_IAD)%>%
summarize(N=n())
test <- rand_dyad%>%
group_by(R_ADL, S_ADL)%>%
summarize(N=n())
View(test)
dyad_1 <- rand_dyad%>%
filter(R_ADL >0 & S_ADL>0)
View(dyad_1)
dyad_2 <- set.diff(dyad_1, by=HHIDPN)
dyad_2 <- setdiff(dyad_1, by=HHIDPN)
dyad_2 <- setdiff(rand_dyad, dyad_1, by=HHIDPN)
View(dyad_2)
test <- dyad_1%>%
group_by(R_ADL, S_ADL)%>%
summarize(N=n())
test <- dyad_2%>%
group_by(R_ADL, S_ADL)%>%
summarize(N=n())
dyad_2 <- setdiff(rand_dyad, dyad_1, by=HHIDPN)%>%
filter(!is.na(R_ADL), !is.na(S_ADL))
test <- dyad_2%>%
group_by(R_ADL, S_ADL)%>%
summarize(N=n())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(haven)
library(data.table)
library(ggplot2)
library(mosaic)
library(skimr)
rand <- read_csv("~/Desktop/data/randhrs.csv")
#glimpse(rand)
id <- rand %>%
select(HHIDPN, HHID, PN, RAHHIDPN,
R12CESD, S12CESD, #CESD Score, binary level yes or no
R12ADLA, S12ADLA #ADL Summary: sum ADLs where Respondent reports any difficulty
)
skim(id)
#rename
setnames(id ,
old=c("R12ADLA", "S12ADLA", "R12CESD", "S12CESD"),
new = c("R_ADL", "S_ADL", "R_CESD", "S_CESD"))
#filter out non-dyad individuals
id_valid <- id%>%
filter(!is.na(R_ADL) | !is.na(S_ADL), !is.na(R_CESD), !is.na(S_CESD))
#There shouldn't be any missing R_ADL
tally(id_valid$S_ADL)
#Missing S_ADL meaning that those helper don't have ADL
tally(id_valid$S_ADL)
#There shouldn't be any missing R_CESD, we want all informaiton
tally(id_valid$R_CESD)
#There shouldn't be any missing S_CESD, we want all informaiton
tally(id_valid$S_CESD)
View(id)
#filter out non-dyad individuals
id_valid <- id%>%
filter(!is.na(R_ADL), !is.na(S_ADL), !is.na(R_CESD), !is.na(S_CESD))
#There shouldn't be any missing R_ADL
tally(id_valid$S_ADL)
#Missing S_ADL meaning that those helper don't have ADL
tally(id_valid$S_ADL)
#There shouldn't be any missing R_CESD, we want all informaiton
tally(id_valid$R_CESD)
#There shouldn't be any missing S_CESD, we want all informaiton
tally(id_valid$S_CESD)
View(dyad_1)
qgamma(0.025, 62,8)
qgamma(0.975, 62,8)
47/5
qgammma(0.025, 17, 14)
qgamma(0.025, 17,14)
qgamma(0.975, 17,14)
qgamma(0.975, 14,17)
qgamma(0.975, 14,17)
qgamma(0.025, 14,17)
knitr::opts_chunk$set(echo = TRUE)
install.packages("BiocInstaller",
repos = "http://bioconductor.org/packages/3.4/bioc")
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
devtools::install_github("beanumber/cranium")
install.packages("devtools")
devtools::install_github("beanumber/cranium")
file <- "~/experiments/data_split/Experiment/AT/AT_wildtype_101_Probabilities.h5"
library(cranium)
library(devtools)
devtools::install_github("beanumber/cranium")
library(cranium)
devtools::install_github("beanumber/cranium")
library(cranium)
devtools::install_github("beanumber/cranium")
install.packages("rhdf5")
rverison
version
install_cran()
# installing/loading the package:
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
updateR()
install.packages("installr")
update.packages()
R.version
#rhdf5
install.packages("rhdf5")
